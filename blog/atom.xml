<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://llazyemail.github.io/documentation/blog</id>
    <title>LLazyEmail Documentation Blog</title>
    <updated>2022-05-05T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://llazyemail.github.io/documentation/blog"/>
    <subtitle>LLazyEmail Documentation Blog</subtitle>
    <icon>https://llazyemail.github.io/documentation/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Exploring Substack for Building Your Newsletter]]></title>
        <id>exploring-substack-for-building-your-newsletter</id>
        <link href="https://llazyemail.github.io/documentation/blog/exploring-substack-for-building-your-newsletter"/>
        <updated>2022-05-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A few days ago I made a post on IndieHackers about my recent accomplishment. I counted my articles on Hackernoon related to #food-tech category and realize that during these years I published 24 articles. It's a huge accomplishment for me and I was happy to share it with others.]]></summary>
        <content type="html"><![CDATA[<p>A few days ago I made a post on IndieHackers about my recent accomplishment. I counted my articles on Hackernoon related to #food-tech category and realize that during these years I published 24 articles. It's a huge accomplishment for me and I was happy to share it with others.</p><p>But comments went in another direction. I get asked if I want to create a newsletter, related to food tech. And yeah, I'm thinking about it, but there are a lot of things to take into consideration.</p><p>I get asked if Substack is a great option to build your newsletter. So I want to share my takeaways here.
Let's start with the basics.</p><p>Substack is a SaaS (Software as a Service) platform that allows writers to monetize their newsletters via a subscription model for various prices starting at $5 per month.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wghq0wmxwynhuzs2li8y.png" alt="Image description" class="img_E7b_"></p><p>its focus on writers and WYSIWYG editor is easy to learn. Plus you can pick if it's a free piece or if you want to send it to your paid users only. While it's easy to write a post, there are still limitations to layout, i.e. you can't put everything there. which is probably fine.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/124xithbow7opobviseb.png" alt="Image description" class="img_E7b_"></p><p>it's can be a great idea to start from scratch, especially when you just want to start publishing your content and don't worry about everything else. It put readers first, which I also like. Not sure if I like an idea about "premium content" that is hidden under paywalls.</p><p>People that know me well, know that I have the motto "Fuck Paywalls". For years I'm skipping magazines with paywalls and published my content on Hackernoon.</p><p>But there are some Pros and Cons, for sure.
You own your content and it's great.
You can also easily export your email list, posts, and other data from your settings page.</p><p>From that page, you can download everything that is allowed by Substack right now. <strong>sarcasm</strong>.</p><hr><p>I remember times when you can download all your business contacts from Linkedin into a simple CSV list. But it's not allowed right now I think... Private companies can easily change their directions, ie pivot and update their terms.</p><p>I also remember that I was able to download contacts to my 60k students on Udemy and use them. But now I have a limited option to reach my students via 2 fields form on Udemy and I also should watch my words and didn't try to steal any traffic from Udemy(they better focus on applying some tools to DRM protection of video courses instead, so nobody can download them).</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ckgfsa7nsgrymor6xce.png" alt="Image description" class="img_E7b_"></p><p>Making money from newsletters is also fine. And the ability to set up paid subscriptions is a great way for monetization.</p><p>Here is a guide from Substack to take a deeper look: <a href="https://substack.com/going-paid-guide" target="_blank" rel="noopener noreferrer">https://substack.com/going-paid-guide</a>.</p><p>I think they allowing you to connect your Stripe account via Settings
But what if your country doesn't support Stripe(yeah, there are so many countries worldwide, you know)...
or what if I'm a crypto fan and I want to put some QR code or include unstoppableDomains links? not sure if it's possible.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/girz814v6bgw8qs7oztm.png" alt="Image description" class="img_E7b_"></p><p>As a company that wants to be profitable, there is some fee for sure.</p><blockquote><p>Substack allows you to use Stripe to accept payments. Stripe is available in select countries if you are not located in one of those countries then you cannot receive payments.</p></blockquote><blockquote><p>Both Substack and Stripe take their cut from each transaction. Substack charges 10% and Stripe charges 2.9% + 30 cents on each transaction. This means if you charge $10 per subscriber then the Substack + Stripe fee will be 1.59.
This may not sound a lot but let's suppose you have 100 paid subscribers each paying $10 per month. You'll be paying $159 each month and $1908 each year.</p></blockquote><p>While I'm fine with that(my Udemy profile has "<em>your IRS withholding tax rate is 24%</em>"), someone might be angry to share their profits.</p><p>SEO is a huge topic to talk about too. Basically, when you try to grow and promote your newsletter - you'll send traffic to the substack website and work for growing their SEO index. And if you decide to part ways - you'll need to start from scratch with all those links, etc.</p><hr><p>Limited integrations also limit your potential to access other tools that may help you convert more visitors into paying subscribers.</p><p>A huge plus is simplicity. You don't need to be a pro in order to start. But again, you will be limited by a platform for sure.</p><p>There is a limit to earning from a single model of monetization. The only paywall is available, so...</p><p>Imagine this situation: you work hard and be able to grow your reader's list. let's assume it's related to tech.</p><p>Your archive page(list of previously published pieces) gets a lot of traffic and you want to add it to the sidebar. CarbonAds(<a href="https://www.carbonads.net/" target="_blank" rel="noopener noreferrer">https://www.carbonads.net/</a>) you wouldn't be allowed to do that.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/onqpeg3hvbbdhq1ituiy.png" alt="Image description" class="img_E7b_"></p><p>Another issue is SEO limitation. All images are hosted on their CDN. Probably they wouldn't be indexed as part of your newsletter here is a link: <code>https://cdn.substack.com/image/fetch/w_704,h_396,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F590aa007-1c00-4f98-abcb-f717db528128_4032x3024.jpeg</code></p><p>they don't put alts, so ...
<code>&lt;img class="post-preview-inner-image" src="{URL}" alt=""&gt;</code></p><p><strong>Censorship</strong>. I don't know about situations where substack limited free speech or anything, but as a public company, I'm sure they have some rules or moderations inside. While I'm sure that HN readers are following some rules, there is always another side.</p><p>A few years ago there was a situation when Patreon decided to ban some accounts because of a violation of rules. Jordan Peterson was affected I think</p><p><a href="https://www.businessinsider.com/jordan-peterson-says-hell-launch-patreon-alternative-before-christmas-2018-12" target="_blank" rel="noopener noreferrer">https://www.businessinsider.com/jordan-peterson-says-hell-launch-patreon-alternative-before-christmas-2018-12</a></p><p><a href="https://www.youtube.com/watch?v=h8_OrrvaVVw&amp;feature=emb_title" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=h8_OrrvaVVw&amp;feature=emb_title</a></p><p>Quick mention(I didn't explore this tool).</p><p><strong>ConvertKit</strong> can be an alternative, btw: <a href="https://convertkit.com/" target="_blank" rel="noopener noreferrer">https://convertkit.com/</a>.</p><p>Again, substack is a great choice if you want to focus on content and don't distract your users with ads or something else boring. But if you will need some additional features that aren't in their roadmap - sorry.</p><p>You can also benefit from their userbase. substack has more than 500k paying subscribers. And if you get featured, you can get some additional users from that. But as a starter, it will be hard to get featured. And I'm not sure if you are ready to do it.</p><p>Plus, it's a competitive field. Like if you have your own website, your marketing, your newsletter, and people go to it to read your content - it's your users. with the substack case, your visitors can end up on some other profiles and as it's a platform that unites - they have the right to switch. is it good or not - it's upon you.</p><p>When I was running my previous company, we don't have a website and got clients from Elance website for freelancers. We have quite a good profile, reviews, etc. We get into 14th LVL which is a quite good accomplishment in my opinion. But when they decided to merge with oDesk and become an Upwork, shit things start to happen.</p><p>But for details, I'll advise reading articles from Nebojsa Todorovic: <a href="https://hackernoon.com/u/nebojsa.todorovic" target="_blank" rel="noopener noreferrer">https://hackernoon.com/u/nebojsa.todorovic</a>.</p><p>After that situation, I'll probably advise you to build your own website and invest money into promoting it, instead of promoting your profiles.</p><p>Let's imagine another situation. You have an upcoming product that you want to promote to your readers. In my situation, it's tools for newsletters or modules for food tech startups.</p><p>Will you be able to use your current userbase? I don't know.</p><p>Let's imagine that you created Landing Page with a lead magnet. Will you be able to add people that subscribed to that product to your Substack list? I don't think so.</p><p>As substack controlling subscription flow, you wouldn't be able to change something there.</p><p>Or what if you want to grow your newsletter and sell it later? I don't think someone will buy access to your Substack account 🙂
And if you decide to migrate away, you'll probably lose some users.</p><p>Recently I find this marketplace for selling newsletters: <a href="https://duuce.com/" target="_blank" rel="noopener noreferrer">https://duuce.com/</a></p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsuw4nwu4mfmw62fkqjb.png" alt="Image description" class="img_E7b_"></p><p>I recall a similar situation with Youtube creators. While recently Youtube added some features for monetization, there are still a lot of cases when people lost their monetization or got some claims from copyright owners.</p><p>If you react to some videos - you can get demonetized, if someone reports your video - it can be deleted, etc.</p><p>This is why some creators are leaving YT or exploring other alternatives.</p><p>There are a lot of great people that doing cool education videos. And as they want to grow and expand their businesses - they moving part of their content into <a href="https://curiositystream.com/" target="_blank" rel="noopener noreferrer">https://curiositystream.com/</a> or <a href="https://nebula.app/" target="_blank" rel="noopener noreferrer">https://nebula.app/</a></p><p>From Nebula website:</p><ul><li><p><strong>Exclusive content</strong>. Original productions and bonus material.</p></li><li><p><strong>Support creators</strong>. Nebula is creator-owned and operated.</p></li><li><p><strong>No pre-roll ads</strong>. No need to skip what isn't there.</p></li><li><p><strong>Download videos</strong>. Watch offline in our mobile apps.</p></li><li><p><a href="https://www.tubefilter.com/2021/09/21/youtube-creator-owned-nebula-curiosity-stream-investment/" target="_blank" rel="noopener noreferrer">https://www.tubefilter.com/2021/09/21/youtube-creator-owned-nebula-curiosity-stream-investment/</a></p></li><li><p><a href="https://www.bbc.com/news/technology-55349255" target="_blank" rel="noopener noreferrer">https://www.bbc.com/news/technology-55349255</a></p></li><li><p><a href="https://www.businessinsider.com/creator-streamer-nebula-legal-eagle-wendover-productions-online-classes-2022-5" target="_blank" rel="noopener noreferrer">https://www.businessinsider.com/creator-streamer-nebula-legal-eagle-wendover-productions-online-classes-2022-5</a></p></li></ul><p>Will continue this thread later.</p><p>Main Page layout on some popular newsletter for foodies.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mro9ynhanbahj598uau2.png" alt="Image description" class="img_E7b_"></p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple Glossary for Non Technies]]></title>
        <id>glossary-for-non-technies</id>
        <link href="https://llazyemail.github.io/documentation/blog/glossary-for-non-technies"/>
        <updated>2022-05-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today I realized that some people dont know much about things like "Server", "Frontend" and others.]]></summary>
        <content type="html"><![CDATA[<p>Today I realized that some people dont know much about things like "Server", "Frontend" and others.</p><p>I used them on call, and ... Person was not on the same page with me.</p><p>Let's collect cool definitions! And after that we'll be able to share it as one article</p><p><strong>Debugging</strong> – The process of detecting and removing <strong>bugs</strong> from a piece of software. Both developers and quality assurance teams engage in this practice regularly to ensure that code is working as intended. They employ methods like automated and manual tests, as well as unit tests. My personal favorite type of debugging is widely applied and very efficient, and it's also got a humorous name: <strong>rubber duck debugging</strong>.</p><p>Simply put, many developers keep a rubber duck on their desk—yes, an actual rubber duck. When they run across a problem in their code that they can't figure out, they start explaining their code out loud to the duck—who is, by the way, an excellent listener. This process is very effective and helps developers iron out any flaws in their logic or identify code that isn't doing what it's supposed to be doing. In the unlikely event that you don't have a proper rubber duck, you can ask your co-worker to serve as a substitute!</p><p><strong>Bug</strong> – An error or flaw in your code that causes unexpected behavior in the associated program. My favorite story is one that most computer scientists are familiar with. In the late 1940s at Harvard University, an error was detected in an early electromechanical computer, Mark II.</p><p>One of the operators of Grace Hopper's team found a real moth trapped inside the computer that happened to be causing the machine to malfunction. The moth was taped to a log book with a note that read, "First actual case of bug being found." To my knowledge, this is the earliest usage of the term "bug" in the context of computer science.</p><p><strong>Library</strong> – A pre-written collection of code that can be added by a software developer to a program to achieve some specific functionality or automate a process. Without libraries and linking, you'd have to repeatedly copy-paste source code into your project directory, or re-write the code yourself.</p><p><strong>Repository</strong> – A data structure where all necessary files for a project or application are stored, as well as the history of all changes made to those files. Repositories make it easy for you to track all changes in your development in case you ever need or want to restore an older version of your code.</p><p><strong>Wireframe</strong>– A prior version of a software that typically includes the design of the project on a structural level (structure of content, functionality, and user journeys).</p><p><strong>Prototype</strong>– A simple working version of the software that typically is the next step in project design after wireframing.</p><p><strong>Front end</strong> – A ‘client’ software that the users interact with. It’s a presentation layer, the way the software looks.</p><p><strong>Back end</strong> – A ‘server’ software that the users do not interact with directly. It’s a data access layer, the way the software works.</p><p><strong>Normalization</strong>
The practice of reducing redundancy in a relational database by separating conceptually distinct data (e.g. books, authors) into different relations (tables). There are several different levels of normalization.</p><p><strong>Algorithm</strong>
An algorithm is a set of instructions or rules designed to solve a definite problem. The problem can be simple like adding two numbers or a complex one, such as converting a video file from one format to another.</p><p><strong>API</strong>
Application Programming Interface (API) is a set of rules, routines, and protocols to build software applications. APIs help in communication with third party programs or services, which can be used to build different software. Companies such as Facebook and Twitter actively use APIs to help developers gain easier access to their services.</p><p><strong>HTTP</strong>
Hypertext Transport (or Transfer) Protocol, the data transfer protocol used on the World Wide Web.</p><p><strong>HTTPS</strong>
Basically the same as HTTP, but uses encryption methods to secure the data passed to and from webpages.</p><p><strong>Request/Response</strong>
The way the frontend and backend communicate with each other is with requests and responses. A frontend script can request data from the backend, and a script in the backend can then send that data as a response.</p><p><strong>Cache</strong>
The cache is where data can be temporarily stored on a browser or computer in order to save time loading the same data over and over again every time it is required.</p><p><strong>Command-line</strong>
The command-line is an interface for typing commands directly to a computer's operating system. This is the most direct and fastest way to perform operations on a computer's operating system like launching a PHP server, creating directory, executing scripts, changing file permissions and much more...</p><p><strong>Release</strong>
Usually, this refers to a new version of the application. It very often is, but does not necessarily need to be, customer centric. The moments before the release are always tense because everyone tries to finish as many tasks as possible without causing a catastrophe in the production environment. That's why some companies host "no-release Fridays" to make it less stressful for the team and avoid potential trainwrecks just before weekend.</p><p><strong>Deploy</strong>
Putting the code to the server where it’ll work.</p><p><strong>Compiling</strong>
The process of converting the source code (written on the programming language, understood by humans) into machine code (understood by machines).</p><p><strong>Architecture</strong>
A set of solutions for organizing the software structure: choosing structural elements and interfaces, the correlation between elements and their behavior.</p><p><strong>Open Source</strong>
Source code freely available for making changes and free to download.</p><p><strong>Decomposition</strong>
A project management technique used to split the complex problem into parts that are easier to execute.</p><p><strong>BACK END</strong>
Backend development refers to the server side of development where the main focus is on how the site works. This usually consists of three parts: a server, an application, and a database. Users can’t see the backend work, but code written by back end developers is what communicates the database information to the browser.</p><p><strong>BOOTSTRAP (aka TWITTER BOOTSTRAP)</strong>
Bootstrap is an intuitive and powerful front end framework that is an open-source collection of tools for creating websites and web applications. It was developed by Mark Otto and Jacob Thornton of Twitter to encourage consistency across internal tools, and was originally named “Twitter Blueprint.”</p><p><strong>FRONT END</strong>
Front end development refers to “client-side” development, where the focus is on what users see. Front end developers will be engaged in analyzing code, design, and debugging applications along with ensuring a seamless user experience.</p><p><strong>ReactJS</strong>
React is currently the most popular javascript front-end framework.
Developed by Facebook in 2013, React is used to build interactive user interfaces.</p><p><strong>MySQL</strong>
MySQL is a relational database management system (RDBMS) developed by Oracle that is based on structured query language (SQL). A database is a structured collection of data. It may be anything from a simple shopping list to a picture gallery or a place to hold the vast amounts of information in a corporate network.</p><p><strong>NoSQL</strong>
NoSQL is famous for its high functionality and ease of development with a performance at scale. NoSQL is called a non-relational database. It does not follow the rules of relational database management systems (RDBMS), and hence does not use traditional SQL statements to query data. 2 famous examples of NoSQL systems are <a href="https://www.mongodb.com/" target="_blank" rel="noopener noreferrer">https://www.mongodb.com/</a> and <a href="https://neo4j.com/" target="_blank" rel="noopener noreferrer">https://neo4j.com/</a>.</p><p><strong>Docker</strong>
Docker is a software platform that allows you to build, test, and deploy applications quickly. Docker packages software into standardized units called containers that have everything the software needs to run including libraries, system tools, code, and runtime. Using Docker, you can quickly deploy and scale applications into any environment and know your code will run.</p><p><strong>Kubernetes</strong>
Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services.
The name Kubernetes originates from Greek, meaning helmsman or pilot. K8s as an abbreviation results from counting the eight letters between the "K" and the "s". Google open-sourced the Kubernetes project in 2014. Kubernetes combines over 15 years of Google's experience running production workloads at scale with best-of-breed ideas and practices from the community.</p><p><strong>AWS</strong>
Amazon Web Services, Inc. (AWS) is a subsidiary of Amazon providing on-demand cloud computing platforms and APIs to individuals, companies, and governments, on a metered pay-as-you-go basis. These cloud computing web services provide a variety of basic abstract technical infrastructure and distributed computing building blocks and tools. One of these services is Amazon Elastic Compute Cloud (EC2), which allows users to have at their disposal a virtual cluster of computers, available all the time, through the Internet. AWS's virtual computers emulate most of the attributes of a real computer, including hardware central processing units (CPUs) and graphics processing units (GPUs) for processing; local/RAM memory; hard-disk/SSD storage; a choice of operating systems; networking; and pre-loaded application software such as web servers, databases, and customer relationship management (CRM).</p><p><strong>Objects</strong>
An object is a combination of related variables, constants and other data structures which can be selected and manipulated together. An object can include shapes that appear on a screen or the age of students in a school.</p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I created a simple NPM package with basic email templates]]></title>
        <id>how-i-created-a-simple-npm-package-with-basic-email-templates</id>
        <link href="https://llazyemail.github.io/documentation/blog/how-i-created-a-simple-npm-package-with-basic-email-templates"/>
        <updated>2022-04-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A story about the need for a default email template package.]]></summary>
        <content type="html"><![CDATA[<p>A story about the need for a <a href="https://github.com/LLazyEmail/default-email-template" target="_blank" rel="noopener noreferrer">default email template package</a>.
From novice developers to experienced ones, most are involved in sending emails programmatically. Sending emails is like building forms: most of the developers involved in building the web did it.</p><ul><li>If you are learning nodeJS, then you probably used nodemailer.</li><li>If you are building your product, I bet you are thinking about connecting your code with SendGrid or MailGun and sending some transactional emails.</li><li>If you are trying to make that sign-up form work and send confirmation emails -&gt; I hear you.</li></ul><p>We have a lot of resources and simple tutorials online that might help you to do such basic things. It is cool that you can read some tutorials, install a few packages and go! </p><p>Even starting with some SAAS boilerplate that removes the first configuration steps and gives you a great jumpstart for your ideas.</p><p>Now you can send your empty email with "Hello world" from your server and be happy when it is delivered to your inbox. And this is where most developers feel that everything is great and stop doing more.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j75251dyexl69wltd3m0.png" alt="Image description" class="img_E7b_"></p><p>And while my module is written in JS, I don't think that it is a hard task to convert it into other languages if someone wants to contribute -&gt; feel free to jump abroad. I’m always friendly to contributors' pull requests.</p><p>Ok, let's try to imagine that you are building your email-related functionality, related to emails from scratch -- you will try to organize email messages in a separate folder, maybe even make it translatable into multi-languages, testing your ability to render it with variables received from other sources...</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0wyf5qjj04719a7svvq.png" alt="Image description" class="img_E7b_"></p><p>But you will probably never try to send an email with a full template from the beginning.</p><p><strong>But you should do it.</strong> </p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a99g4067ltz8jqzao2ay.png" alt="Image description" class="img_E7b_"></p><p>There are a lot of important questions that you have to ask yourself.
<em>Does your email template is good and render all necessary thoughts?</em>
<em>What about images? Do you have a folder with images that is available from outside?</em>
<em>Are all permissions set correctly? (Ie. not only your logo must be visible)</em>
<em>What about links?</em>
<em>What about supporting different email clients? (Yes there is not only your email app that you update frequently.)</em></p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhrexk9s1f5jsyk4o1dz.png" alt="Image description" class="img_E7b_"></p><p>Some people use Thunderbird and it disables image rendering by default (just to let you know). </p><p>All those things might crash your email. Plus, it’s an old HTML4 code, so everything is so fragile.</p><p>I was trying to solve our inner coding problem a few months ago. We had an issue with making email templates to be precise --&gt; we split them into partials, but I still didn't like what my stomach was telling me about manipulating with markup emails.</p><p>But that is a story for another article. And it was time for me to be inspired by other developers.</p><p>I reviewed a few repositories during one night. I found a few basic, but interesting solutions.</p><p>While our render method was working well for our needs -&gt; it didn't give you this feeling of quickly understanding what your code is doing.</p><p>We didn't have it.</p><p>So I saved links and copied a few methods into temporary files.</p><p>It was not enough, especially as our problem was not gone anyway. At that moment I realized that a lot of projects might have similar issues. Imagine this situation: you have your monolith application and you need to send a test email via your Email Transport provider.</p><p>And sending a few blank emails with 2 lines is not enough either. We all need a quick and easy way to do it properly without additional knowledge. One of the best ways is to use a predefined working solution. So I decided to make it an open JS module and easy to use for everyone.</p><p>And I created two repositories for that :)</p><p>The first repository contains 3 files. And it's easy to read. Just a long string aka literal with an email template inside.</p><p>What's good about this repository is that you can install it via npm, use it a few times, while debugging your project, and then delete it.</p><p>like <code>yarn add javascript-email-templates</code> and just use one or a few templates imported.</p><p>Or you can use a statement like,</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">if(NODE_ENV == 'production') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // send a test email to an admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>and it will work for a lot of cases</p><p>The second repository can be more interesting.</p><p>Basically, I copy-pasted a render method from other repositories. Yes, they has "free to use and modify" license.</p><p>I want to extend and isolate that render method, so it can be an independent package, suit our project needs and be easy to customize, if necessary (there is always a need to customize things. you can't make it work from the first shot).</p><p>Show some love if you want more articles like this one! any activity will be appreciated.</p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create a Curated Email Newsletter That Brings Results for Your Business]]></title>
        <id>how-to-create-a-curated-email-newsletter-that-brings-results-for-your-business</id>
        <link href="https://llazyemail.github.io/documentation/blog/how-to-create-a-curated-email-newsletter-that-brings-results-for-your-business"/>
        <updated>2022-03-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Email marketing is the most effective channel available to marketers today.]]></summary>
        <content type="html"><![CDATA[<p>Email marketing is the most effective channel available to marketers today.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqn1djzxaabkhlsqz9u5.png" alt="Image description" class="img_E7b_"></p><p>It can help you keep your business the center of attention, build thought leadership around your brand, and generate sales.</p><p>However, it also requires content, and creating content can be time-consuming.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9h890g85nkj6flfh7q0.jpg" alt="Image description" class="img_E7b_"></p><p>So how can marketers like you send out engaging newsletters without spending hours creating content?</p><p>The answer is to create a curated newsletter.</p><p>In this post, we'll show you what a curated email newsletter is and walk you through the process of setting up a curated newsletter that brings results for your business. However, before we dive into curated newsletters, let's first touch on the basics of newsletters, in general.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oq9pd64gj1e49s44yjxb.png" alt="Image description" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-can-i-start-an-email-newsletter-for-a-company">How can I start an email newsletter for a company?<a class="hash-link" href="#how-can-i-start-an-email-newsletter-for-a-company" title="Direct link to heading">​</a></h2><p>Before a company dives into creating curated newsletters, it needs to have a solid understanding of what an email newsletter is. </p><p>An email newsletter is an email communication that is sent to inform your subscribers about various topics, such as:</p><ul><li>Latest news</li><li>Advice</li><li>Product updates / launches</li><li>Important appointments</li></ul><p>These emails can cover general topics and user-generated topics that are sent on a predetermined schedule, such as weekly, monthly, quarterly, etc.</p><p>Starting an email newsletter isn't all that difficult, especially if you've already created a list of email users. </p><p>From there, you'll simply have to send opt-in emails to your subscribers to make sure they want to receive your marketing materials, and once that's done you can start sending them according to your predetermined schedule.</p><p>Starting an email newsletter isn't that difficult, especially if you've already built a list of email users. </p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uwti3h7w9yobdziau9e.jpg" alt="Image description" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="how-do-you-make-a-good-newsletter">How do you make a good newsletter?<a class="hash-link" href="#how-do-you-make-a-good-newsletter" title="Direct link to heading">​</a></h2><p>What makes a good newsletter really depends on the brand, industry, and target audience. The reason for this is that everyone wants something a little different which is why they choose specific activities to follow.</p><p>However, there are several ways to help your email marketing team create a newsletter that works well.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="1-dont-try-to-sell">1. Don't try to sell<a class="hash-link" href="#1-dont-try-to-sell" title="Direct link to heading">​</a></h3><p>Mentioning a product is one thing, as you will do it during product launches / updates, but it has to be about the reader, not you selling them something.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="2-be-short-and-simple">2. Be short and simple<a class="hash-link" href="#2-be-short-and-simple" title="Direct link to heading">​</a></h3><p>It must be informative, also encouraging readers to click to learn more.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="3-again-you-should-aim-for-a-click-through">3. Again, you should aim for a click-through<a class="hash-link" href="#3-again-you-should-aim-for-a-click-through" title="Direct link to heading">​</a></h3><p>Click through rate (CTR) is the most common metric for measuring engagement within an email campaign. CTR is a metric that measures how many people click through an email in relation to how many emails were delivered. Essentially, the click rate is a percentage that tells you how many emails successfully achieved one click from a subscriber. This click tells you if your campaign was engaging enough to not only entice an open, but also an action from your audience.</p><p><a href="https://www.campaignmonitor.com/resources/knowledge-base/what-is-click-through-rate-how-can-ctr-be-calculated/" target="_blank" rel="noopener noreferrer">Source</a> </p><h3 class="anchor anchorWithStickyNavbar_mojV" id="4-simplify-deactivationunsubscribe-link">4. Simplify deactivation(unsubscribe link).<a class="hash-link" href="#4-simplify-deactivationunsubscribe-link" title="Direct link to heading">​</a></h3><p>It is vital to make deactivation easy for those who wish to stop receiving communications.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="5-make-sure-its-compelling">5. Make sure it's compelling.<a class="hash-link" href="#5-make-sure-its-compelling" title="Direct link to heading">​</a></h3><hr><h2 class="anchor anchorWithStickyNavbar_mojV" id="what-is-a-curated-newsletter">What is a curated newsletter?<a class="hash-link" href="#what-is-a-curated-newsletter" title="Direct link to heading">​</a></h2><p>First of all, it is essential to understand what it means to care: to put together, sift and select for presentation.</p><p>Therefore, a curated newsletter is one that aggregates interesting and / or popular content on a specific topic. </p><p>Curated newsletters find the best of the best material and then collect it in one place.</p><p>Often, along with links to external content locations, the newsletter will also offer a brief commentary or summary on the pieces.</p><p>Here is an example from Campaign Monitor client SitePoint:</p><blockquote><p>The newsletter curates the best web design and development content from across the web and delivers it daily to subscribers in a simple and convenient format.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_mojV" id="why-create-a-curated-newsletter">Why create a curated newsletter?<a class="hash-link" href="#why-create-a-curated-newsletter" title="Direct link to heading">​</a></h2><p>There are many reasons why people take a curated newsletter approach. </p><p>For many, it helps build their businesses:</p><ul><li>Stay on top with subscribers</li><li>Build thought leadership around your brand</li><li>Sharing interesting discoveries and resources</li></ul><blockquote><p>Curated newsletters are an opportunity to offer readers a wide range of material that you have personally selected for them.</p></blockquote><p>Plus, with so much content posted on the web, a curated newsletter has serious value.</p><p><strong>Choose your topic</strong>
The first step in creating your curated email newsletter is choosing your topic.</p><p>Will your curated newsletter contain email marketing tips and tricks? </p><p>Alternatively, will you curate content on web design trends?</p><p>Choosing your topic is one of the most critical parts of starting a curated email newsletter.</p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building React Components for Emails]]></title>
        <id>building-react-components-for-emails</id>
        <link href="https://llazyemail.github.io/documentation/blog/building-react-components-for-emails"/>
        <updated>2022-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Let me share a story about building React Components for emails and the email generator that I created.]]></summary>
        <content type="html"><![CDATA[<p>Let me share a story about building React Components for emails and the email generator that I created.</p><p>Here you can find a lot of information about my obsession.</p><p>I want to focus on my findings about React, building email campaigns, and sharing things that most of the developers need.</p><p>I started the second branch of our repository; I created a basic clean Nextjs app, set of components and used this application as a preview of the emails tool.</p><p>Yeah, it was easy in the beginning. You will make tremendous progress; with this application, it is easy to produce reports, questions are easy to solve, etc.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6valqprc6se0x437iz6x.png" alt="Image description" class="img_E7b_"></p><p>It was a good milestone. I was angry and happy at the same time. You can't get a result without hitting blockers.</p><p>The next stage was a few months ago. I decided to jump into it. There are no bugs that I can't handle :)</p><p>As I was not the leading developer of this branch - I quickly realized that it was a rigid structure for me to follow. </p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lg66itl8kx0a4fqb0flh.png" alt="Image description" class="img_E7b_"></p><p>I will move some components into a sub-module (I will see where this idea brings me.) </p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/js65g5dbnfqzkgfojv9x.png" alt="Image description" class="img_E7b_"></p><p>This shouldn't be hard. I did it before, with the help of Rollup. So I grabbed my own two years old rollup config that was working with simple react components. And tried to make it work.</p><p>I tried three times -&gt; nothing worked as it should :)</p><p>Well, things changed - my old config didn't work well with the new version of Babel and React.&nbsp;</p><p>It was time to dig into Rollup and solve this problem.&nbsp;</p><p><a href="https://rollupjs.org/guide/en/" target="_blank" rel="noopener noreferrer">RollupJS</a> is a popular tool and good library that I adore.</p><p>But documentation was really outdated… The maintainer of this project has a lot of things to do, so docs have very low priority. </p><p>That is is why capitalism is king, and open source is still slow, weak, and not bringing a lot of money into the system and can't support code contributors. </p><p>This was one of the reasons for me thinking about doing a software specifications service. But there is a <a href="https://www.karllhughes.com/" target="_blank" rel="noopener noreferrer">Karl Huges</a>, with <a href="http://www.writer.dev" target="_blank" rel="noopener noreferrer">WriterDev</a> website, where you can use his help if you need excellent software documentation.</p><p>And I am not blaming <a href="https://github.com/lukastaegert" target="_blank" rel="noopener noreferrer">Lukas Taegert-Atkinson</a>(creator of RollupJS). But if he decides to expand the team that building it, things probably would be much easier.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snx6j3lcb8zmbyw4gk6m.gif" alt="Image description" class="img_E7b_"></p><p>I left the task for a few weeks and just explored the internet in a lazy way.</p><p>At one point, <a href="https://github.com/jaebradley/example-rollup-react-component-npm-package" target="_blank" rel="noopener noreferrer">I found a repository</a> that sounds reasonable with a config that suits my needs. It even provides room for future growth.</p><p>I was looking for a Rollup setup with Babel and the ability to compile and publish my React components.</p><p>Yes, yes, yes. I'm aware of <a href="https://bit.dev/" target="_blank" rel="noopener noreferrer">Bit</a> or other similar tools, but they are somehow against my understanding. Again, I'm scared of Webpack. I mentioned it a few times on my articles. </p><p>But I'm still ready for something better. This is why I'm exploring the <a href="https://lit.dev/" target="_blank" rel="noopener noreferrer">Lit Library</a> at the same time. It is still not in my arsenal but looks promising.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5frn4uieb6uiu0ayitml.png" alt="Image description" class="img_E7b_"></p><p>Separation functionality is one of the things that I've been praising for the last few years, probably because I read a lot of articles on Hackernoon on different languages, platforms, functions, etc. And when your code is tied up with just one project, with just one framework, used only once, it's boring, it is life, so I get on with it. </p><p>But where can we find anarchy and punk rock? You can beat the system by benefiting from an open source at the same time.</p><p><a href="https://media.giphy.com/media/WsvLlmmjx9tnmeTPNc/giphy.gif" target="_blank" rel="noopener noreferrer">https://media.giphy.com/media/WsvLlmmjx9tnmeTPNc/giphy.gif</a></p><p>Plus, hard-to-swallow code is usually wrong. Usually hard to cover with tests. Easy to spend a week, just by debugging, patching, and ready to break in the next six months.&nbsp;</p><p>Well, it's just not for me. Bad code is too easy to build.</p><p>Hopefully, now you'll understand a bit my coding philosophy.</p><p>Again, I find <a href="https://github.com/jaebradley/example-rollup-react-component-npm-package" target="_blank" rel="noopener noreferrer">an excellent repository</a> with the premade setup as my components have pretty low-level complexity.</p><p>But there is more:</p><ul><li><p>it has pre-made Github actions for publishing on npm</p></li><li><p>storybook for playgrounds</p></li><li><p>and tools that I need when I want a separate module of components that I can easily tweak, extend, publish and install in between projects, repositories.</p></li></ul><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/itu81kmwbzy6kqppp1og.png" alt="Image description" class="img_E7b_"></p><p>I did a few iterations there, combined some components, and published them on npm.org.</p><p>But it still does not move forward quickly, as I imagine it in my head.</p><p><a href="https://media.giphy.com/media/eNGuf8kUCeGrvflJfo/giphy.gif" target="_blank" rel="noopener noreferrer">https://media.giphy.com/media/eNGuf8kUCeGrvflJfo/giphy.gif</a></p><p>Let's take a break a little bit. There is a default question that my friend Denis asked me.&nbsp;</p><p><em>"But emails aren't a new problem. React isn't a new tool as well. There should probably be plenty of other repositories in GitHub. Did you look at them?"</em></p><p>And I spent a few nights just exploring GitHub and got excited about it.</p><p>But there are always default issues related to using other modules.&nbsp;</p><p><em>This is why I like to have separated and independent modules</em></p><p>Yes, there are old, popular repositories that can have similar tools inside. The reason is always simple - they didn't fit well to our current code. It is not their fault.</p><p>It's a widespread issue - you can't easily integrate something great and prebuild with the workflows you have. So instead of trying some of them right now, I'm just stacking links in my notes.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cdbb98rzjv941n6dh6qu.png" alt="Image description" class="img_E7b_"></p><p>Even while I have a lot of ideas - the main goal is to make the current project work. Later, when our modules will be mature - we will try to replace some functionality.</p><p>We did it before - a pretty incredible experience.</p><p>I talk about popular repositories to build emails with some algorithms, I mean JS stuff for building emails. It's <a href="https://maizzle.com/" target="_blank" rel="noopener noreferrer">Maizzle</a>, <a href="https://www.mailjet.com/feature/mjml/" target="_blank" rel="noopener noreferrer">MJML</a>, and others. So later, if things go smoothly - we'll add a port to those libraries. </p><p>Our email generator is “syntax agnostic”. if you learn it, I can generate you HTML, React DOM, XML, or even AST-tree</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdj25b7j1ljxjtmc8krz.png" alt="Image description" class="img_E7b_"></p><p>One of my concerns is that the current library must be improved. A few great repositories are doing similar things, but they are aging poorly. For sure, it's not a problem, but I will make it differently.</p><p>From another side, I want to use their logic and be able to include some of their excellent findings into our core.</p><p>This is why I decided not to have one boring repository and started splitting it.</p><p>I also started a <a href="https://github.com/LLazyEmail" target="_blank" rel="noopener noreferrer">new organization on Github</a> as a unique place for several repositories interconnected by email marketing topic and email template generation.</p><p>I split an old repository into a just react components place. And old components were mixed mostly on one template. Now, I want to get a universal version. And by separating inner with outer things, separating default components with Miscellaneous Elements helped to think more widely and make things work together and independently.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oif42hceyf5v3erj116p.png" alt="Image description" class="img_E7b_"></p><p>So if you decide to use our components for your emails, you can install <a href="https://github.com/LLazyEmail/react-email-table" target="_blank" rel="noopener noreferrer">Table components</a> or <a href="https://github.com/LLazyEmail/react-email-typography-components" target="_blank" rel="noopener noreferrer">Basic Typography</a> components and use them while not being overwhelmed with other available components (like bid design systems like <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap</a> or <a href="https://ant.design/" target="_blank" rel="noopener noreferrer">Ant Design</a>). It was the main image in my head.</p><p><a href="https://nextjs.org/" target="_blank" rel="noopener noreferrer">NextJS</a> is used as a preview, repositories with separated  components. What is next? Well. I will jump into the next loophole that will distracted me for another few months. it will help me to optimize that code.</p><p>I am going to write more articles about that.</p><p><strong>Related Articles</strong>
<a href="https://dev.to/atherdon/how-i-created-a-simple-npm-package-with-basic-email-templates-1efo" target="_blank" rel="noopener noreferrer">https://dev.to/atherdon/how-i-created-a-simple-npm-package-with-basic-email-templates-1efo</a></p><p><a href="https://dev.to/atherdon/created-a-module-for-markdown-regexes-3a1b" target="_blank" rel="noopener noreferrer">https://dev.to/atherdon/created-a-module-for-markdown-regexes-3a1b</a></p><p><a href="https://dev.to/atherdon/creating-an-advanced-structure-for-html-email-template-1n28" target="_blank" rel="noopener noreferrer">https://dev.to/atherdon/creating-an-advanced-structure-for-html-email-template-1n28</a></p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reading List Email Marketing Basics]]></title>
        <id>reading-list-email-marketing-basics</id>
        <link href="https://llazyemail.github.io/documentation/blog/reading-list-email-marketing-basics"/>
        <updated>2022-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Strategies]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_mojV" id="strategies">Strategies<a class="hash-link" href="#strategies" title="Direct link to heading">​</a></h3><ul><li><a href="https://alite-international.com/7-effective-email-marketing-strategies-generat-sales/" target="_blank" rel="noopener noreferrer">7 Effective Email Marketing Strategies to Generate More Sales</a></li><li><a href="https://www.superoffice.com/blog/email-marketing-strategy/" target="_blank" rel="noopener noreferrer">Email Marketing Strategy: A Data-Driven Guide to Email in 2021</a></li><li><a href="https://neilpatel.com/blog/beginners-guide-email-marketing/" target="_blank" rel="noopener noreferrer">Email Marketing: How to do it, Strategies, Tools, &amp; Examples</a></li><li><a href="https://mailchimp.com/email-marketing/" target="_blank" rel="noopener noreferrer">Email Marketing Strategy and Tips for Successful Campaigns | Mailchimp</a></li><li><a href="https://www.forbes.com/sites/theyec/2020/09/11/10-tried-and-true-email-marketing-tactics-that-actually-work/?sh=3f5f54007a33" target="_blank" rel="noopener noreferrer">10 Tried-And-True Email Marketing Tactics That Actually Work</a></li><li><a href="https://sendpulse.com/support/glossary/email-marketing-strategy" target="_blank" rel="noopener noreferrer">What is Email Marketing Strategy: Definition, Tips, Video</a></li><li><a href="https://buffer.com/resources/8-effective-email-strategies-backed-by-research/" target="_blank" rel="noopener noreferrer">8 Effective Email Marketing Strategies, Backed by Science</a></li><li><a href="https://optinmonster.com/beginners-guide-to-email-marketing/" target="_blank" rel="noopener noreferrer">Email Marketing: The #1 Ridiculously Easy Way To Grow Your Business - OptinMonster</a></li><li><a href="https://mailchimp.com/email-design-guide/" target="_blank" rel="noopener noreferrer">https://mailchimp.com/email-design-guide/</a></li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="building-email-list">Building Email List<a class="hash-link" href="#building-email-list" title="Direct link to heading">​</a></h3><ul><li><a href="https://popupsmart.com/blog/email-list-building-methods-beginners" target="_blank" rel="noopener noreferrer">Email List Building: 13 Proven Methods to Grow Your Email List</a></li><li><a href="https://popupsmart.com/email-marketing/#how-to-build-an-email-list" target="_blank" rel="noopener noreferrer">Email Marketing Beginner to Advanced Roadmap 2021 | Popupsmart</a></li><li><a href="https://mailchimp.com/resources/how-to-build-your-email-list/" target="_blank" rel="noopener noreferrer">How to Build Your Email List in Less than an Hour | Mailchimp</a></li></ul><h3 class="anchor anchorWithStickyNavbar_mojV" id="basic-questions">Basic questions<a class="hash-link" href="#basic-questions" title="Direct link to heading">​</a></h3><ul><li><a href="https://www.getrevue.co/profile/the_week_in_newsletters/issues/how-much-can-you-earn-from-your-newsletter-557696" target="_blank" rel="noopener noreferrer">How much can you earn from your newsletter? </a></li><li><a href="https://www.getrevue.co/profile/the_week_in_newsletters/issues/options-to-start-a-paid-newsletter-292557" target="_blank" rel="noopener noreferrer">Options to start a paid newsletter </a></li><li><a href="https://www.getrevue.co/profile/the_week_in_newsletters/issues/how-much-is-your-newsletter-worth-285518" target="_blank" rel="noopener noreferrer">How much is your newsletter worth?</a></li><li><a href="https://www.getrevue.co/profile/the_week_in_newsletters/issues/risks-and-rewards-of-a-paid-newsletter-280186" target="_blank" rel="noopener noreferrer">Risks and rewards of a paid newsletter </a></li></ul>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating an advanced Structure for HTML Email Template]]></title>
        <id>creating-an-advanced-structure-for-html-email-template</id>
        <link href="https://llazyemail.github.io/documentation/blog/creating-an-advanced-structure-for-html-email-template"/>
        <updated>2022-02-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I was rebuilding a part of our markdown-to-email repository. I was not happy with how we handle templates in our generator.]]></summary>
        <content type="html"><![CDATA[<p>I was rebuilding a part of our <a href="https://github.com/atherdon/markdown-to-email" target="_blank" rel="noopener noreferrer">markdown-to-email</a> repository. I was not happy with how we handle templates in our generator.</p><p>While there are not many things that changed behind how it works, I still want to showcase them in my article.</p><p>All developers work with strings, generating chunks of HTML code. I spend days thinking about how to improve it for our benefit.</p><p>While this version of the template will be obsolete when we upgrade our generator, there is still room to forget some knowledge and learn how to keep things simple and not be seduced by ideas to complete it quickly.</p><p>So we have been working on rendering HTML for a while right now. </p><p>Our HTML template contains an old HTML4 style markup that is very sensitive and requires careful work and attention to small details. I have been asking for help from different developers, but everybody struggles with it from the beginning. </p><p>So we are combining that HTML page from small parts, and for the last nine months, I moved those parts away into a small js module. </p><p>With the help of RollupJS, it's easy to work.</p><p> <img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62g0ie0unri1ad1aoy8k.png" alt="Image description" class="img_E7b_"></p><p>I was able to extend it and even clone it. I decided to build a react-dom tree at some point instead of HTML. </p><p>So I copy-pasted everything and replaced my literals with react tags. It looks like “custom XML”, which can be just another way of presenting the information.</p><p>After that, this module didn't evolve a lot. Everything was working ok, but not ideally. I tried to expand it and polish our functionality, but things didn't move fast. </p><p>This module was located in folder "packages" with other modules that I have.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xqep0y6lxflgsireezp3.png" alt="Image description" class="img_E7b_"></p><p>At this point, I decided that there was a lot of coding, and I was sick of it. So I created a new repository and moved it there. While it was just a copy-paste - it helped me to think differently. I was able to focus only on those 25 files.</p><p>From the beginning, we think about our template in 2 only forms: "content only" and "full template". Most bugs was in the "content" part, while the main template was pretty stable. But it was hard to go from "content only" into "full template" sometimes - we don't have an easy way to preview it or debug.</p><p>So I separated our 25 files into two parts: literals related to "not content" was named "outer template."</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ypf0uon3b80zl2230ff.png" alt="Image description" class="img_E7b_"></p><p>And I decided to replace my literals with functions.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ajg3lzb6mvl0uox2we0p.png" alt="Image description" class="img_E7b_"></p><p>Functions look similar to simple react components.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bt3qijnk6yyinrc3dww8.png" alt="Image description" class="img_E7b_"></p><p>It gives me the ability to debug my strings how I want it.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnfogb6bsqqrvbslrqt0.png" alt="Image description" class="img_E7b_"></p><p>I even created a folder with basic tests inside.</p><p> <img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jjpou6ut89kdvrc3ysnp.png" alt="Image description" class="img_E7b_"></p><p>Hope you like it!</p><p>More articles about building markdown to email:</p><ul><li><a href="https://dev.to/atherdon/created-a-module-for-markdown-regexes-3a1b" target="_blank" rel="noopener noreferrer">https://dev.to/atherdon/created-a-module-for-markdown-regexes-3a1b</a></li><li><a href="https://dev.to/atherdon/how-i-created-a-simple-npm-package-with-basic-email-templates-1efo" target="_blank" rel="noopener noreferrer">https://dev.to/atherdon/how-i-created-a-simple-npm-package-with-basic-email-templates-1efo</a></li></ul><p>UPD. I forget to add a link to a repository with a source code.
<a href="https://github.com/LLazyEmail/_trying-lit" target="_blank" rel="noopener noreferrer">Current code is here</a>, but I probably rename this repository later.</p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I Created a module for markdown RegEx`es]]></title>
        <id>how-i-created-a-simple-npm-package-with-basic-email-templates</id>
        <link href="https://llazyemail.github.io/documentation/blog/how-i-created-a-simple-npm-package-with-basic-email-templates"/>
        <updated>2022-02-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[While working on https://github.com/atherdon/markdown-to-email repository, we created and adapted a few cool things that I want to share with others.]]></summary>
        <content type="html"><![CDATA[<p>A story about the need for a <a href="https://github.com/LLazyEmail/default-email-template" target="_blank" rel="noopener noreferrer">default email template package</a>.
From novice developers to experienced ones, most are involved in sending emails programmatically. Sending emails is like building forms: most of the developers involved in building the web did it.</p><ul><li>If you are learning nodeJS, then you probably used nodemailer.</li><li>If you are building your product, I bet you are thinking about connecting your code with SendGrid or MailGun and sending some transactional emails.</li><li>If you are trying to make that sign-up form work and send confirmation emails -&gt; I hear you.</li></ul><p>We have a lot of resources and simple tutorials online that might help you to do such basic things. It is cool that you can read some tutorials, install a few packages and go! </p><p>Even starting with some SAAS boilerplate that removes the first configuration steps and gives you a great jumpstart for your ideas.</p><p>Now you can send your empty email with "Hello world" from your server and be happy when it is delivered to your inbox. And this is where most developers feel that everything is great and stop doing more.</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j75251dyexl69wltd3m0.png" alt="Image description" class="img_E7b_"></p><p>And while my module is written in JS, I don't think that it is a hard task to convert it into other languages if someone wants to contribute -&gt; feel free to jump abroad. I’m always friendly to contributors' pull requests.</p><p>Ok, let's try to imagine that you are building your email-related functionality, related to emails from scratch -- you will try to organize email messages in a separate folder, maybe even make it translatable into multi-languages, testing your ability to render it with variables received from other sources...</p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0wyf5qjj04719a7svvq.png" alt="Image description" class="img_E7b_"></p><p>But you will probably never try to send an email with a full template from the beginning.</p><p><strong>But you should do it.</strong> </p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a99g4067ltz8jqzao2ay.png" alt="Image description" class="img_E7b_"></p><p>There are a lot of important questions that you have to ask yourself.
<em>Does your email template is good and render all necessary thoughts?</em>
<em>What about images? Do you have a folder with images that is available from outside?</em>
<em>Are all permissions set correctly? (Ie. not only your logo must be visible)</em>
<em>What about links?</em>
<em>What about supporting different email clients? (Yes there is not only your email app that you update frequently.)</em></p><p><img loading="lazy" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mhrexk9s1f5jsyk4o1dz.png" alt="Image description" class="img_E7b_"></p><p>Some people use Thunderbird and it disables image rendering by default (just to let you know). </p><p>All those things might crash your email. Plus, it’s an old HTML4 code, so everything is so fragile.</p><p>I was trying to solve our inner coding problem a few months ago. We had an issue with making email templates to be precise --&gt; we split them into partials, but I still didn't like what my stomach was telling me about manipulating with markup emails.</p><p>But that is a story for another article. And it was time for me to be inspired by other developers.</p><p>I reviewed a few repositories during one night. I found a few basic, but interesting solutions.</p><p>While our render method was working well for our needs -&gt; it didn't give you this feeling of quickly understanding what your code is doing.</p><p>We didn't have it.</p><p>So I saved links and copied a few methods into temporary files.</p><p>It was not enough, especially as our problem was not gone anyway. At that moment I realized that a lot of projects might have similar issues. Imagine this situation: you have your monolith application and you need to send a test email via your Email Transport provider.</p><p>And sending a few blank emails with 2 lines is not enough either. We all need a quick and easy way to do it properly without additional knowledge. One of the best ways is to use a predefined working solution. So I decided to make it an open JS module and easy to use for everyone.</p><p>And I created two repositories for that :)</p><p>The first repository contains 3 files. And it's easy to read. Just a long string aka literal with an email template inside.</p><p>What's good about this repository is that you can install it via npm, use it a few times, while debugging your project, and then delete it.</p><p>like <code>yarn add javascript-email-templates</code> and just use one or a few templates imported.</p><p>Or you can use a statement like,</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx" style="color:#393A34;background-color:#f6f8fa"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">if(NODE_ENV == 'production') {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // send a test email to an admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>and it will work for a lot of cases</p><p>The second repository can be more interesting.</p><p>Basically, I copy-pasted a render method from other repositories. Yes, they has "free to use and modify" license.</p><p>I want to extend and isolate that render method, so it can be an independent package, suit our project needs and be easy to customize, if necessary (there is always a need to customize things. you can't make it work from the first shot).</p><p>Show some love if you want more articles like this one! any activity will be appreciated.</p>]]></content>
        <author>
            <name>Arthur Tkachenko</name>
            <uri>https://github.com/wgao19</uri>
        </author>
        <category label="hola" term="hola"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
</feed>